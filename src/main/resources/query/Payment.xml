<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.red.xip.payment.mapper.PaymentMapper">

	
	
	<select id="orderStatusCheck" 
		parameterType = "com.red.xip.payment.model.P_Tosspay"
		resultType="String">
		<![CDATA[
			SELECT  ORDER_CD
			FROM    XIP_ORDER
			WHERE   USER_CD = CAST(#{userCd}AS UNSIGNED)
			AND     PG_NAME = #{pgName}
			AND     PAYMENT_KEY = #{paymentKey}
			AND     ORDER_ID = #{orderId}
		]]>
	</select>

	<select id="orderCartCheck" 
		parameterType = "com.red.xip.payment.model.P_Tosspay"
		resultType="String">
		<![CDATA[
			SELECT  SUM(C.PROD_QTY * CASE AD.ISO2 WHEN 'KR' THEN P.PRICE
                                                  ELSE P.US_PRICE END
                    )+ MAX(CO.SHIP_FEE)
			FROM    XIP_CART AS C 
			        INNER JOIN XIP_PROD_D AS PD
                    ON  PD.PROD_CD_D = C.PROD_CD_D
                    INNER JOIN XIP_PROD AS P
                    ON  P.PROD_CD = PD.PROD_CD
                    INNER JOIN ADDRESSES AS AD
                    ON  AD.USER_CD = C.USER_CD
                    INNER JOIN COUNTRIES AS CO 
                	ON  AD.ISO2 = CO.ISO2
			WHERE   C.USER_CD =  CAST(#{userCd}AS UNSIGNED)
			AND     P.STATUS != '-1'
			AND     P.STATUS != '2'
			AND     CONCAT('|',P.SIZE_OPT,'|') LIKE CONCAT('%|',PD.PROD_SIZE,'|%')
			AND     PD.SOLD_QTY < PD.TOTAL_QTY
			GROUP BY C.USER_CD;
		]]>
	</select>
	
	<select id="orderCheck" 
		parameterType = "com.red.xip.payment.model.P_Tosspay"
		resultType="String">
		<![CDATA[
			SELECT  CASE AD.ISO2 WHEN 'KR' THEN P.PRICE
                                 ELSE P.US_PRICE END
                                 + CO.SHIP_FEE
			FROM    XIP_PROD_D AS PD 
			        INNER JOIN XIP_PROD AS P
                    ON  P.PROD_CD = PD.PROD_CD
                    INNER JOIN ADDRESSES AS AD
                    ON  AD.USER_CD = CAST(#{userCd}AS UNSIGNED)
                    INNER JOIN COUNTRIES AS CO 
                	ON AD.ISO2 = CO.ISO2
			WHERE   PD.PROD_CD_D = #{orderMethod}
			AND     P.STATUS != '-1'
			AND     P.STATUS != '2'
			AND     CONCAT('|',P.SIZE_OPT,'|') LIKE CONCAT('%|',PD.PROD_SIZE,'|%')
			AND     PD.SOLD_QTY < PD.TOTAL_QTY;
		]]>
	</select>
	
	<insert id="insertOrder"
		parameterType = "com.red.xip.payment.model.P_Tosspay">
		INSERT INTO XIP_ORDER(
		    USER_CD,
		    PG_NAME,
		    PAYMENT_KEY,
		    ORDER_ID,
		    ORDER_STATUS,
		    PAY_METHOD,
		    ORDER_DT,
		    CURRENCY,
		    TOTAL_AMOUNT,
		    SHIPPING_AMOUNT,
		    SHIPPING_METHOD,
		    TRACKING_NUM,
		    SHIP_DT,
		    ADD_LAST_NM,
		    ADD_FIRST_NM,
		    PHONE,
		    COMPANY,
		    ADD_1,
		    ADD_2,
		    CITY,
		    ADD_COUNTRY,
		    STATE,
		    POSTAL_CD,
		    CREAT_DT,
		    MODIFY_DT
		)
		SELECT  AD.USER_CD,
		        #{pgName} AS PG_NAME,
		        #{paymentKey} AS PAYMENT_KEY,
		        #{orderId} AS OREDER_ID,
		        '1' AS ORDER_STATUS,
		        '' AS PAY_METHOD,
		        NOW() AS ORDER_DT,
		        CASE AD.ISO2 WHEN 'KR' THEN 'KRW'
                             ELSE 'USD' END AS CURRENCY,
		        #{amount} AS TOTAL_AMOUNT,
		        CO.SHIP_FEE AS SHIPPING_AMOUNT,
		        'KOREA POST' AS SHIPIING_METHOD,
		        NULL AS TRACKING_NUM,
		        NULL AS SHIP_DT,
		        AD.ADD_LAST_NM,
		        AD.ADD_FIRST_NM,
		        AD.PHONE,
		        AD.COMPANY,
		        AD.ADD_1,
		        AD.ADD_2,
		        AD.CITY,
		        AD.ADD_COUNTRY,
		        AD.STATE,
		        AD.POSTAL_CD,
		        NOW() AS CREAT_DT,
		        NOW() AS MODIFY_DT
		FROM    ADDRESSES AS AD
				INNER JOIN COUNTRIES AS CO 
                ON AD.ISO2 = CO.ISO2
		WHERE   USER_CD= CAST(#{userCd}AS UNSIGNED)
	</insert>
	<insert id="insertOrderD" parameterType="com.red.xip.payment.model.P_Tosspay">
	    <selectKey keyProperty="orderCd" resultType="int" order="BEFORE">
	        SELECT MAX(ORDER_CD) FROM XIP_ORDER WHERE USER_CD = CAST(#{userCd}AS UNSIGNED)
	    </selectKey>
	    
	    INSERT INTO XIP_ORDER_D (
	        ORDER_CD,
			PROD_CD_D,
			ORDER_PRICE,
			PROD_QTY,
			CREAT_DT,
			MODIFY_DT
	    )
	    <choose>
			
			<when test = "orderMethod == 'cart'">
			<![CDATA[
				SELECT  #{orderCd} AS ORDER_CD,
						PD.PROD_CD_D,
						CASE WHEN M.CURRENCY = 'KRW' THEN P.PRICE
						     WHEN M.CURRENCY = 'USD' THEN P.US_PRICE END  AS ORDER_PRICE,
						C.PROD_QTY,
						NOW() AS CREAT_DT,
						NOW() AS MODIFY_DT
				FROM    XIP_CART AS C
						INNER JOIN XIP_PROD_D AS PD
	                    ON  PD.PROD_CD_D = C.PROD_CD_D
	                    INNER JOIN XIP_PROD AS P
	                    ON  P.PROD_CD = PD.PROD_CD
	                    INNER JOIN XIP_ORDER AS M
	                    ON  M.ORDER_CD = #{orderCd}
	                    AND C.USER_CD = M.USER_CD
				WHERE   C.USER_CD = CAST(#{userCd}AS UNSIGNED)
				AND     P.STATUS != '-1'
				AND     P.STATUS != '2'
				AND     CONCAT('|',P.SIZE_OPT,'|') LIKE CONCAT('%|',PD.PROD_SIZE,'|%')
				AND     PD.SOLD_QTY < PD.TOTAL_QTY;
			]]>
			</when>
			
			<otherwise>
			<![CDATA[
				SELECT  #{orderCd} AS ORDER_CD,
	                    PD.PROD_CD_D,
	                    CASE WHEN M.CURRENCY = 'KRW' THEN P.PRICE
	                         WHEN M.CURRENCY = 'USD' THEN P.US_PRICE END  AS ORDER_PRICE,
	                    1,
	                    NOW() AS CREAT_DT,
	                    NOW() AS MODIFY_DT
	            FROM    XIP_PROD_D AS PD
	                    INNER JOIN XIP_PROD AS P
	                    ON  P.PROD_CD = PD.PROD_CD
	                    INNER JOIN XIP_ORDER AS M
	                    ON  M.ORDER_CD = #{orderCd}
		                AND M.USER_CD = CAST(#{userCd}AS UNSIGNED)
	            WHERE   PD.PROD_CD_D = #{orderMethod}
	            AND     P.STATUS != '-1'
	            AND     P.STATUS != '2'
	            AND     CONCAT('|',P.SIZE_OPT,'|') LIKE CONCAT('%|',PD.PROD_SIZE,'|%')
	            AND     PD.SOLD_QTY < PD.TOTAL_QTY;
	        ]]>
			</otherwise>
			
		</choose>
	</insert>
	
	<delete id="deleteUserCart" parameterType="com.red.xip.payment.model.P_Tosspay">
		DELETE
		FROM    XIP_CART
		WHERE   USER_CD = CAST(#{userCd}AS UNSIGNED);
	</delete>
	
	<update id="updatePayMethod" parameterType="com.red.xip.payment.model.P_Tosspay">
		UPDATE  XIP_ORDER
		   SET  PAY_METHOD = IFNULL(#{payMethod}, '')
		 WHERE  ORDER_CD = #{orderCd}
		 AND    USER_CD = CAST(#{userCd}AS UNSIGNED);
	</update>
		
	<update id="updateProdQty" parameterType="com.red.xip.payment.model.P_Tosspay">
	<![CDATA[
		UPDATE  XIP_PROD_D AS PD 
                INNER JOIN XIP_ORDER_D AS OD
                ON OD.PROD_CD_D = PD.PROD_CD_D
           SET  PD.SOLD_QTY = PD.SOLD_QTY + OD.PROD_QTY
        WHERE   OD.ORDER_CD = #{orderCd}
    ]]>
	</update>
	
	<select id="selectOrderDetails" 
			parameterType="com.red.xip.payment.model.P_Tosspay"
			resultType="com.red.xip.payment.model.R_PurchaseEmail">
		SELECT  P.NAME, 
                CONCAT('Size: ',PD.PROD_SIZE) AS PROD_SIZE,
			    CONCAT('Amount: ', OD.PROD_QTY) AS PROD_QTY,
                CASE O.CURRENCY
                     WHEN 'KRW' THEN CONCAT( 'â‚©', FORMAT(OD.PROD_QTY * OD.ORDER_PRICE,0) )
                     WHEN 'USD' THEN CONCAT( '$', FORMAT(OD.PROD_QTY * OD.ORDER_PRICE,0) )    
                     ELSE '' END AS PRICE
        FROM    XIP_ORDER_D AS OD
                INNER JOIN XIP_ORDER AS O
                ON  O.ORDER_CD = OD.ORDER_CD
                INNER JOIN XIP_PROD_D AS PD
                ON  PD.PROD_CD_D = OD.PROD_CD_D
                INNER JOIN XIP_PROD AS P
                ON  P.PROD_CD = PD.PROD_CD
		WHERE   OD.ORDER_CD = #{orderCd}
	</select>
	
</mapper>