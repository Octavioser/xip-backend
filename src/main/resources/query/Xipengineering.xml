<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.red.xip.xipengineering.mapper.XipengineeringMapper">

	<select id="selectUsers" 
		parameterType = "com.red.xip.xipengineering.model.P_User"
		resultType="com.red.xip.xipengineering.model.R_User">
		<![CDATA[
			SELECT  M.LAST_NM,
			        M.FIRST_NM,
			        M.EMAIL,
			        DATE_FORMAT(M.CREAT_DT, '%y%m%d') AS CREAT_DT
			FROM    XIP_USERS AS M
			        INNER JOIN XIP_INCU AS X
			        ON  X.USER_CD = CAST(#{userCd}AS UNSIGNED)
			        AND X.EMAIL = #{email}
			WHERE   ( IFNULL(#{name}, '') = '' OR 
						M.FIRST_NM LIKE CONCAT('%', #{name}, '%') OR 
						M.LAST_NM LIKE CONCAT('%', #{name}, '%') )
			AND     M.CREAT_DT > #{fromDt}
			AND     M.CREAT_DT < #{toDt}
			ORDER BY  M.CREAT_DT DESC
		]]>
	</select>  
	
	<select id="selectOrders" 
		parameterType = "com.red.xip.xipengineering.model.P_Orders"
		resultType="com.red.xip.xipengineering.model.R_Orders">
		<![CDATA[
			SELECT  M.ORDER_CD,
			        DATE_FORMAT(M.ORDER_DT, '%Y-%m-%d %H:%i:%s') AS ORDER_DT,
			        CASE M.ORDER_STATUS 
			             WHEN '1' THEN '배송전'
			             WHEN '2' THEN '배송후'
			             WHEN '3' THEN '배송완료'
			             WHEN '0' THEN '취소요청'
			             WHEN '-1'THEN '취소완료' END AS ORDER_STATUS,
			        CASE WHEN CURRENCY = 'KRW' THEN TOTAL_AMOUNT 
			             ELSE '' END  AS KRW_TOTAL_AMOUNT,
			        CASE WHEN CURRENCY = 'KRW' THEN SHIPPING_AMOUNT 
			             ELSE '' END  AS KRW_SHIPPING_AMOUNT,
			        CASE WHEN CURRENCY = 'KRW' THEN TOTAL_AMOUNT - SHIPPING_AMOUNT 
			             ELSE '' END  AS KRW_SUB_TOTAL,
			        CASE WHEN CURRENCY = 'USD' THEN TOTAL_AMOUNT 
			             ELSE '' END  AS USD_TOTAL_AMOUNT,
			        CASE WHEN CURRENCY = 'USD' THEN TOTAL_AMOUNT 
			             ELSE '' END  AS USD_SHIPPING_AMOUNT,
			        CASE WHEN CURRENCY = 'USD' THEN TOTAL_AMOUNT 
			             ELSE '' END  AS USD_SUB_TOTAL
			FROM    XIP_ORDER AS M
			        INNER JOIN XIP_INCU AS X
			        ON  X.USER_CD = CAST(#{userCd}AS UNSIGNED)
			        AND X.EMAIL = #{email}
			WHERE   CASE WHEN #{orderStatus} = '' THEN TRUE
					     ELSE M.ORDER_STATUS = #{orderStatus} END
			AND     M.ORDER_DT > #{fromDt}
			AND     M.ORDER_DT < #{toDt}
			ORDER BY  M.CREAT_DT DESC
		]]>
	</select>
	
	<select id="selectPurchaseOrder" 
		parameterType = "com.red.xip.xipengineering.model.P_PurchaseOrders"
		resultType="com.red.xip.xipengineering.model.R_PurchaseOrders">
		<![CDATA[
			SELECT  M.ORDER_CD,
			        CONCAT(U.LAST_NM, ' ', U.FIRST_NM) AS USER_NM,
			        U.EMAIL,
			        DATE_FORMAT(M.ORDER_DT, '%Y-%m-%d %H:%i:%s') AS ORDER_DT,
			        '운송장 등록' AS TRACKING_INPUT
			FROM    XIP_ORDER AS M
			        INNER JOIN XIP_INCU AS X 
			        ON  X.USER_CD = CAST(#{userCd}AS UNSIGNED)
			        AND X.EMAIL = #{email}
			        LEFT OUTER JOIN XIP_USERS AS U
			        ON  U.USER_CD = M.USER_CD
			WHERE   M.ORDER_STATUS = #{orderStatus}
			AND     M.ORDER_DT > #{fromDt}
			AND     M.ORDER_DT < #{toDt}
			ORDER BY  M.CREAT_DT DESC
		]]>
	</select>
	
	<select id="selectTrackingAdd" 
		parameterType = "com.red.xip.xipengineering.model.P_Tracking"
		resultType="com.red.xip.xipengineering.model.R_Tracking">
		<![CDATA[
			SELECT  M.SHIPPING_METHOD,
			        M.ADD_LAST_NM,
			        M.ADD_FIRST_NM,
			        M.PHONE,
			        IFNULL(M.COMPANY,'') AS COMPANY,
			        M.ADD_1,
			        M.ADD_2,
			        M.CITY,
			        M.ADD_COUNTRY,
			        M.STATE,
			        M.POSTAL_CD,
			        IFNULL(M.TRACKING_NUM, '') AS TRACKING_NUM
			FROM    XIP_ORDER AS M
			        INNER JOIN XIP_INCU AS X 
			        ON  X.USER_CD = CAST(#{userCd}AS UNSIGNED)
			        AND X.EMAIL = #{email}
			WHERE   M.ORDER_CD = CAST(#{orderCd}AS UNSIGNED)
		]]>
	</select>
	
	<select id="selectTrackingProd" 
		parameterType = "com.red.xip.xipengineering.model.P_Tracking"
		resultType="com.red.xip.xipengineering.model.TrackingProd">
		<![CDATA[
			SELECT  D.PROD_CD_D,
			        P.NAME,
			        PD.PROD_SIZE,
			        D.PROD_QTY
			FROM    XIP_ORDER_D AS D
			        INNER JOIN XIP_INCU AS X 
			        ON  X.USER_CD = CAST(#{userCd}AS UNSIGNED)
			        AND X.EMAIL = #{email}
			        LEFT OUTER JOIN XIP_PROD_D AS PD
			        ON  PD.PROD_CD_D = D.PROD_CD_D
			        LEFT OUTER JOIN XIP_PROD AS P
			        ON  P.PROD_CD = PD.PROD_CD
			WHERE   D.ORDER_CD = CAST(#{orderCd}AS UNSIGNED)
		]]>
	</select>
	
	<update id="updateTrackingNum" 
		parameterType = "com.red.xip.xipengineering.model.P_Tracking">
		<![CDATA[
			UPDATE  XIP_ORDER AS M
					INNER JOIN XIP_INCU AS X 
			        ON  X.USER_CD = CAST(#{userCd}AS UNSIGNED)
			        AND X.EMAIL = #{email}
			   SET  M.TRACKING_NUM = #{trackingNum},
			        M.ORDER_STATUS='2',
			        M.SHIP_DT = NOW()
			WHERE   ORDER_CD = CAST(#{orderCd}AS UNSIGNED)
		]]>
	</update>
	
	<select id="selectShipInfo" 
		parameterType = "com.red.xip.xipengineering.model.P_Tracking"
		resultType="com.red.xip.xipengineering.model.R_ShipInfo">
		<![CDATA[
			SELECT  M.ORDER_CD,
			        M.SHIPPING_METHOD,
			        M.TRACKING_NUM,
			        CONCAT(M.ADD_FIRST_NM, ' ' ,M.ADD_LAST_NM) AS ADD_NM,
			        M.ADD_1,
			        M.ADD_2,
			        CONCAT(M.CITY,', ', M.STATE, ', ', M.POSTAL_CD, ', ', M.ADD_COUNTRY) AS CITY_POSTAL,
			        CASE CURRENCY
			             WHEN 'KRW' THEN CONCAT( '₩', FORMAT(TOTAL_AMOUNT,0) )
			             WHEN 'USD' THEN CONCAT( '$', FORMAT(TOTAL_AMOUNT,0) )    
			             ELSE '' END AS TOTAL_AMOUNT,
			        CASE CURRENCY
			             WHEN 'KRW' THEN CONCAT( '₩', FORMAT(SHIPPING_AMOUNT,0) )
			             WHEN 'USD' THEN CONCAT( '$', FORMAT(SHIPPING_AMOUNT,0) )    
			             ELSE '' END AS SHIPPING_AMOUNT,
			        CASE CURRENCY
			             WHEN 'KRW' THEN CONCAT( '₩', FORMAT(TOTAL_AMOUNT - SHIPPING_AMOUNT,0) )
			             WHEN 'USD' THEN CONCAT( '$', FORMAT(TOTAL_AMOUNT - SHIPPING_AMOUNT,0) )    
			             ELSE '' END AS SUB_TOTAL
			FROM    XIP_ORDER AS M
			        INNER JOIN XIP_INCU AS X 
			        ON  X.USER_CD = CAST(#{userCd}AS UNSIGNED)
			        AND X.EMAIL = #{email}
			WHERE   M.ORDER_CD = CAST(#{orderCd}AS UNSIGNED)
		]]>
	</select>
	
	<select id="selectShipEmail" 
		parameterType = "com.red.xip.xipengineering.model.P_Tracking"
		resultType="String">
		<![CDATA[
			SELECT  U.EMAIL
			FROM    XIP_ORDER AS M
			        INNER JOIN XIP_INCU AS X 
			        ON  X.USER_CD = CAST(#{userCd}AS UNSIGNED)
			        AND X.EMAIL = #{email}
			        LEFT OUTER JOIN XIP_USERS AS U
			        ON  U.USER_CD = M.USER_CD
			WHERE   M.ORDER_CD = CAST(#{orderCd}AS UNSIGNED)
		]]>
	</select>
	
	<select id="selectShipDetails" 
		parameterType = "com.red.xip.xipengineering.model.P_Tracking"
		resultType="com.red.xip.xipengineering.model.R_ShipDetails">
		<![CDATA[	
			SELECT  P.NAME,
			        CONCAT('Size: ',PD.PROD_SIZE) AS PROD_SIZE,
			        CONCAT('Amount: ', M.PROD_QTY) AS PROD_QTY
			FROM    XIP_ORDER_D AS M
			        INNER JOIN XIP_INCU AS X 
			        ON  X.USER_CD = CAST(#{userCd}AS UNSIGNED)
			        AND X.EMAIL = #{email}
			        LEFT OUTER JOIN XIP_PROD_D AS PD 
			        ON  PD.PROD_CD_D = M.PROD_CD_D
			        LEFT OUTER JOIN XIP_PROD AS P
			        ON  P.PROD_CD = PD.PROD_CD
			WHERE   M.ORDER_CD = CAST(#{orderCd}AS UNSIGNED)
		]]>
	</select>
	
</mapper>