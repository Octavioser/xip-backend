<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.red.xip.shop.mapper.ShopMapper">

	<select id ="selectDetailAccount"
			parameterType = "com.red.xip.shop.model.P_Account"
			resultType="com.red.xip.shop.model.R_AccountDetail">
	<![CDATA[
		SELECT  IFNULL(M.FIRST_NM, '') AS FIRST_NM,
                IFNULL(M.LAST_NM, '') AS LAST_NM,
                M.EMAIL AS EMAIL,
                M.USER_CD,
                
                CASE WHEN IFNULL(AD.USER_CD, '')= '' THEN 0 ELSE 1 END AS ADD_COUNT,  
                IFNULL(AD.ADD_LAST_NM, '') AS ADD_LAST_NM,
                IFNULL(AD.ADD_FIRST_NM, '') AS ADD_FIRST_NM,
                IFNULL(AD.PHONE, '') AS PHONE,
                IFNULL(AD.COMPANY, '') AS COMPANY,
                IFNULL(AD.ADD_1, '') AS ADD_1,
                IFNULL(AD.ADD_2, '') AS ADD_2,
                IFNULL(AD.CITY, '') AS CITY,
                IFNULL(AD.ADD_COUNTRY, '') AS ADD_COUNTRY,
                IFNULL(AD.ISO2, '') AS ISO2,
                IFNULL(AD.STATE, '') AS STATE,
                IFNULL(AD.POSTAL_CD, '') AS POSTAL_CD,
                
                IFNULL(CO.SHIP_FEE,0) AS SHIP_FEE,
                
                CASE WHEN IFNULL(WEB.WEB_AUTH_ID, '') = '' THEN '0'
                	 ELSE '1' END AS WEB_AUTH_ID
        FROM    XIP_USERS AS M
                LEFT OUTER JOIN ADDRESSES AS AD
                ON  M.USER_CD = AD.USER_CD
                LEFT OUTER JOIN COUNTRIES AS CO 
                ON AD.ISO2 = CO.ISO2
                LEFT OUTER JOIN WEB_AUTHN AS WEB
                ON  M.USER_CD = WEB.USER_CD
        WHERE   M.USER_CD = CAST(#{userCd}AS UNSIGNED)
        AND     M.EMAIL = #{email}
	]]>
	</select>
	
	<update id ="updateAccountInfoNm"
			parameterType = "com.red.xip.shop.model.P_Account">
		UPDATE  XIP_USERS
		   SET  LAST_NM = #{lastNm},
		        FIRST_NM = #{firstNm},
		        MODIFY_DT = NOW()
		WHERE   USER_CD = CAST(#{userCd}AS UNSIGNED)
		AND     EMAIL= #{email}
	</update>
	
	<update id ="updateAccountInfoPw"
			parameterType = "com.red.xip.shop.model.P_Account">
		UPDATE  XIP_USERS
		   SET  PW = #{newPw},
		        MODIFY_DT = NOW()
		WHERE   USER_CD = CAST(#{userCd}AS UNSIGNED)
		AND     EMAIL= #{email}
	</update>
	
	<select id="getPwCheck" 
		parameterType = "com.red.xip.shop.model.P_Account"
		resultType="com.red.xip.shop.model.R_Account">
	
		SELECT PW, EMAIL, USER_CD
		FROM   XIP_USERS
		WHERE  EMAIL = #{email}
		
	</select>
	
	<insert id="insertAdd" 
		parameterType = "com.red.xip.shop.model.P_Account">
	 
		INSERT INTO ADDRESSES(
	        USER_CD,
	        ADD_LAST_NM,
	        ADD_FIRST_NM,
	        PHONE,
	        COMPANY,
	        ADD_1,
	        ADD_2,
	        CITY,
	        ADD_COUNTRY,
	        ISO2,
	        STATE,
	        POSTAL_CD,
	        CREAT_DT,
	        MODIFY_DT
	    )
	    VALUES (
	        CAST(#{userCd}AS UNSIGNED),
	        #{addLastNm},
	        #{addFirstNm},
	        #{phone},
	        #{company},
	        #{add1},
	        #{add2},
	        #{city},
	        #{addCountry},
	        #{iso2},
	        #{state},
	        #{postalCd},
	        NOW(),
	        NOW()
	    )
	    ON DUPLICATE KEY UPDATE
	    ADD_LAST_NM = #{addLastNm},
        ADD_FIRST_NM = #{addFirstNm},
        PHONE = #{phone},
        COMPANY = #{company},
        ADD_1 = #{add1},
        ADD_2 = #{add2},
        CITY = #{city},
        ADD_COUNTRY = #{addCountry},
        ISO2 = #{iso2},
        STATE = #{state},
        POSTAL_CD = #{postalCd},
        MODIFY_DT = NOW();
	</insert>

	<select id="selectProdList" 
		parameterType = "com.red.xip.shop.model.P_Shop"
		resultType="com.red.xip.shop.model.R_Shop">
	
		SELECT  PROD_CD,
		        NAME,
		        US_PRICE,
		        PRICE,
		        STATUS,
		        IMAGE_SRC
		FROM    XIP_PROD
		WHERE   STATUS != '-1'
		AND     CASE WHEN IFNULL(#{season},'ALL') = 'ALL' THEN TRUE 
				ELSE SEASON = #{season} END;
	</select>
	
	<select id="selectDetailProdList" 
		parameterType = "com.red.xip.shop.model.P_Shop"
		resultType="com.red.xip.shop.model.R_Shop">
		<![CDATA[
			SELECT  M.NAME,
			        M.PRICE,
			        M.US_PRICE,
			        M.SIZE_OPT,
			        M.PROD_DESC,
			        M.PROD_DESC_D,
			        D.PROD_CD_D,
			        D.PROD_SIZE,
			        CASE WHEN (M.STATUS = '2' OR M.STATUS = '-1') THEN 2 
			        	 WHEN D.SOLD_QTY < D.TOTAL_QTY THEN 1 
			             ELSE 2 END AS PROD_STATUS,
			        IMG.IMG_SRC
			FROM    XIP_PROD AS M
			        INNER JOIN XIP_PROD_D AS D
			        ON D.PROD_CD = M.PROD_CD
			        LEFT OUTER JOIN XIP_IMAGE AS IMG
			        ON  IMG.IMAGE_CD = M.PROD_CD
			WHERE   M.PROD_CD = #{prodCd}
			AND     M.STATUS != '-1'
			AND     CONCAT('|',M.SIZE_OPT,'|') LIKE CONCAT('%|',D.PROD_SIZE,'|%') 
		]]>
	</select>
	
	<insert id="insertCart" 
		parameterType = "com.red.xip.shop.model.P_Account">
	 
		INSERT INTO XIP_CART (
		    USER_CD,
		    PROD_CD_D,
		    PROD_QTY,
		    CREAT_DT,
		    MODIFY_DT
		)
		VALUES (
		    CAST(#{userCd}AS UNSIGNED),
		    #{prodCdD},
		    1,
		    NOW(),
		    NOW()
		)
	    ON DUPLICATE KEY UPDATE
	 	PROD_QTY = PROD_QTY + 1,
	 	MODIFY_DT = NOW()
	</insert>
	
	<delete id="deleteSoldoutCart" 
		parameterType = "com.red.xip.shop.model.P_Cart">
		<![CDATA[
			DELETE  C
            FROM    XIP_CART AS C
                    LEFT JOIN XIP_PROD_D AS PD
                    ON  PD.PROD_CD_D = C.PROD_CD_D
                    LEFT JOIN XIP_PROD AS P
                    ON  P.PROD_CD = PD.PROD_CD
            WHERE   PD.SOLD_QTY >= PD.TOTAL_QTY 
            OR      P.STATUS = '-1' 
            OR      P.STATUS = '2'
            OR      CONCAT('|',P.SIZE_OPT,'|') NOT LIKE CONCAT('%|',PD.PROD_SIZE,'|%') 
		]]>
	</delete>
	
	<select id="selectCart" 
		parameterType = "com.red.xip.shop.model.P_Cart"
		resultType="com.red.xip.shop.model.R_Cart">
		<![CDATA[
			SELECT  M.NAME,
			        M.PRICE,
			        M.US_PRICE,
			        M.IMAGE_SRC,
			        D.PROD_SIZE,
			        C.PROD_QTY,
			        D.PROD_CD_D,
			        D.TOTAL_QTY - D.SOLD_QTY AS MAX_QTY 
			FROM    XIP_CART AS C
			        INNER JOIN XIP_PROD_D AS D
			        ON  D.PROD_CD_D = C.PROD_CD_D
			        INNER JOIN XIP_PROD AS M
			        ON  M.PROD_CD = D.PROD_CD
			WHERE   C.USER_CD = CAST(#{userCd}AS UNSIGNED)
			AND     C.PROD_QTY > 0
			AND     M.STATUS != '-1'
			AND     M.STATUS != '2'
			AND     CONCAT('|',M.SIZE_OPT,'|') LIKE CONCAT('%|',D.PROD_SIZE,'|%') 
			AND     D.SOLD_QTY < D.TOTAL_QTY
		]]>
	</select>
	
	<update id ="updateCartQty"
			parameterType = "com.red.xip.shop.model.CartList">
		UPDATE  XIP_CART AS M
				INNER JOIN XIP_PROD_D AS PD
                ON  PD.PROD_CD_D = M.PROD_CD_D
		   SET  M.PROD_QTY = CASE WHEN PD.SOLD_QTY >= PD.TOTAL_QTY THEN 0
                                  WHEN M.PROD_QTY + CAST(#{prodQty} AS INT) > (PD.TOTAL_QTY - PD.SOLD_QTY) THEN PD.TOTAL_QTY - PD.SOLD_QTY
                                  WHEN 1 > M.PROD_QTY + CAST(#{prodQty} AS INT) THEN 0
                                  ELSE M.PROD_QTY + CAST(#{prodQty} AS INT) END,
                M.MODIFY_DT = NOW()
		WHERE   M.USER_CD = CAST(#{userCd}AS UNSIGNED)
		AND     M.PROD_CD_D = #{prodCdD}    
	</update>
	
	<delete id ="deleteCartQty"
			parameterType = "com.red.xip.shop.model.CartList">
		DELETE  
		FROM    XIP_CART
		WHERE   USER_CD = CAST(#{userCd}AS UNSIGNED) 
		AND     PROD_CD_D = #{prodCdD}
	</delete>
	
	
	<select id="selectCartQty" 
		parameterType = "com.red.xip.shop.model.P_Cart"
		resultType="int">
		SELECT TOTAL_QTY - SOLD_QTY FROM XIP_PROD_D WHERE PROD_CD_D= #{prodCdD};
	</select>
	
	<delete id ="deleteWebauthn"
			parameterType = "com.red.xip.shop.model.P_Account">
		DELETE FROM WEB_AUTHN WHERE USER_CD = CAST(#{userCd}AS UNSIGNED);
	</delete>
	
	<delete id ="deleteAccount"
			parameterType = "com.red.xip.shop.model.P_Account">
		DELETE FROM XIP_USERS WHERE USER_CD = CAST(#{userCd}AS UNSIGNED);
	</delete>
	
	<select id="selectOrder" 
		parameterType = "com.red.xip.shop.model.P_Order"
		resultType="com.red.xip.shop.model.R_Order">
		
		SELECT  CONCAT (DATE_FORMAT(ORDER_DT, '%b' ), ' ', 
						DATE_FORMAT(ORDER_DT, '%e' ), ', ', 
						DATE_FORMAT(ORDER_DT, '%Y') ) AS ORDER_DT,
		        CASE ORDER_STATUS 
		             WHEN '1' THEN 'PURCHASED'
		             WHEN '2' THEN 'SHIPPED'
		             WHEN '3' THEN 'SHIPPED'
		             WHEN '0' THEN 'CANCELLING'
		             WHEN '-1' THEN 'CANCELLED'
		             ELSE '' END AS ORDER_STATUS,
		        ORDER_CD,
		        CASE CURRENCY
		             WHEN 'KRW' THEN CONCAT( '₩', FORMAT(TOTAL_AMOUNT,0) )
		             WHEN 'USD' THEN CONCAT( '$', FORMAT(TOTAL_AMOUNT,0) )    
		             ELSE '' END AS TOTAL_AMOUNT
		FROM    XIP_ORDER AS M
		WHERE   USER_CD = CAST(#{userCd}AS UNSIGNED)
		ORDER BY M.ORDER_DT DESC;
	</select> 

	<select id="selectOrderDetails" 
		parameterType = "com.red.xip.shop.model.P_OrderD"
		resultType="com.red.xip.shop.model.R_OrderD">
		
		SELECT  CONCAT (DATE_FORMAT(ORDER_DT, '%b' ), ' ', 
						DATE_FORMAT(ORDER_DT, '%e' ), ', ', 
						DATE_FORMAT(ORDER_DT, '%Y') ) AS ORDER_DT,
		        CASE ORDER_STATUS 
		             WHEN '1' THEN 'PURCHASED'
		             WHEN '2' THEN 'SHIPPED'
		             WHEN '3' THEN 'SHIPPED'
		             WHEN '0' THEN 'CANCELLING'
		             WHEN '-1' THEN 'CANCELLED'
		             ELSE '' END AS ORDER_STATUS,
		        ORDER_CD,
		        SHIPPING_METHOD,
		        PAY_METHOD,
		        ADD_LAST_NM,
		        ADD_FIRST_NM,
		        PHONE      ,
		        COMPANY,
		        ADD_1,
		        ADD_2,
		        CITY,
		        ADD_COUNTRY,
		        STATE,
		        POSTAL_CD,
		        CASE CURRENCY
		             WHEN 'KRW' THEN CONCAT( '₩', FORMAT(TOTAL_AMOUNT,0) )
		             WHEN 'USD' THEN CONCAT( '$', FORMAT(TOTAL_AMOUNT,0) )    
		             ELSE '' END AS TOTAL_AMOUNT,
		        CASE CURRENCY
		             WHEN 'KRW' THEN CONCAT( '₩', FORMAT(SHIPPING_AMOUNT,0) )
		             WHEN 'USD' THEN CONCAT( '$', FORMAT(SHIPPING_AMOUNT,0) )    
		             ELSE '' END AS SHIPPING_AMOUNT,
		        CASE CURRENCY
		             WHEN 'KRW' THEN CONCAT( '₩', FORMAT(TOTAL_AMOUNT - SHIPPING_AMOUNT,0) )
		             WHEN 'USD' THEN CONCAT( '$', FORMAT(TOTAL_AMOUNT - SHIPPING_AMOUNT,0) )    
		             ELSE '' END AS SUB_TOTAL
		FROM    XIP_ORDER AS M
		WHERE   ORDER_CD = CAST(#{orderCd}AS UNSIGNED)
		AND     USER_CD = CAST(#{userCd}AS UNSIGNED)
	</select>
	
	<select id="selectOrderDetailProducts" 
		parameterType = "com.red.xip.shop.model.P_OrderD"
		resultType="com.red.xip.shop.model.orderDetails">
		
		SELECT  PD.PROD_CD_D,
				P.IMAGE_SRC, 
		        P.NAME, 
		        PD.PROD_SIZE, 
		        D.PROD_QTY,
		        CASE CURRENCY
		             WHEN 'KRW' THEN CONCAT( '₩', FORMAT(D.ORDER_PRICE * D.PROD_QTY,0) )
		             WHEN 'USD' THEN CONCAT( '$', FORMAT(D.ORDER_PRICE * D.PROD_QTY,0) )    
		             ELSE '' END AS PROD_PRICE
		FROM    XIP_ORDER_D AS D 
		        INNER JOIN XIP_ORDER AS M
		        ON  M.ORDER_CD = D.ORDER_CD
		        INNER JOIN  XIP_PROD_D AS PD
		        ON  PD.PROD_CD_D = D.PROD_CD_D
		        INNER JOIN  XIP_PROD AS P
		        ON  P.PROD_CD = PD.PROD_CD
		WHERE   D.ORDER_CD = CAST(#{orderCd}AS UNSIGNED)
		AND     M.USER_CD = CAST(#{userCd}AS UNSIGNED)
	</select>
	 
	<update id ="updateCancelOrder"
			parameterType = "com.red.xip.shop.model.P_OrderD">
		UPDATE  XIP_ORDER
		   SET  ORDER_STATUS = '0',
		   		MODIFY_DT = NOW()
		WHERE   ORDER_CD = CAST(#{orderCd}AS UNSIGNED)
		AND     USER_CD = CAST(#{userCd}AS UNSIGNED)
		AND     ORDER_STATUS = '1'
	</update>
	
	<update id ="updateCancellingCancel"
			parameterType = "com.red.xip.shop.model.P_OrderD">
		UPDATE  XIP_ORDER
		   SET  ORDER_STATUS = '1',
		   		MODIFY_DT = NOW()
		WHERE   ORDER_CD = CAST(#{orderCd}AS UNSIGNED)
		AND     USER_CD = CAST(#{userCd}AS UNSIGNED)
		AND     ORDER_STATUS = '0'
	</update>
	
	<select id="selectCountries" 
		resultType="com.red.xip.shop.model.R_Country">
	
		SELECT  ISO2, ISO3, NAME 
        FROM    COUNTRIES
		
	</select>
	
</mapper>