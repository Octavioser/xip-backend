<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.red.xip.shop.mapper.ShopMapper">

	<select id ="selectDetailAccount"
			parameterType = "com.red.xip.shop.model.P_Account"
			resultType="com.red.xip.shop.model.R_Account">
	<![CDATA[
		SELECT  IFNULL(M.FIRST_NM, '') AS FIRST_NM,
                IFNULL(M.LAST_NM, '') AS LAST_NM,
                M.EMAIL AS EMAIL,
                
                CASE WHEN IFNULL(AD.USER_CD, '')= '' THEN 0 ELSE 1 END AS ADD_COUNT,  
                IFNULL(AD.ADD_LAST_NM, '') AS ADD_LAST_NM,
                IFNULL(AD.ADD_FIRST_NM, '') AS ADD_FIRST_NM,
                IFNULL(AD.PHONE, '') AS PHONE,
                IFNULL(AD.COMPANY, '') AS COMPANY,
                IFNULL(AD.ADD_1, '') AS ADD_1,
                IFNULL(AD.ADD_2, '') AS ADD_2,
                IFNULL(AD.CITY, '') AS CITY,
                IFNULL(AD.ADD_COUNTRY, '') AS ADD_COUNTRY,
                IFNULL(AD.STATE, '') AS STATE,
                IFNULL(AD.POSTAL_CD, '') AS POSTAL_CD,
                
                CASE WHEN IFNULL(WEB.WEB_AUTH_ID, '') = '' THEN '0'
                	 ELSE '1' END AS WEB_AUTH_ID
        FROM    XIP_USERS AS M
                LEFT OUTER JOIN ADDRESSES AS AD
                ON  M.USER_CD = AD.USER_CD
                LEFT OUTER JOIN WEB_AUTHN AS WEB
                ON  M.USER_CD = WEB.USER_CD
        WHERE   M.USER_CD = CAST(#{userCd}AS UNSIGNED)
        AND     M.EMAIL = #{email}
	]]>
	</select>
	
	<update id ="updateAccountInfoNm"
			parameterType = "com.red.xip.shop.model.P_Account">
		UPDATE  XIP_USERS
		   SET  LAST_NM = #{lastNm},
		        FIRST_NM = #{firstNm}
		WHERE   USER_CD = CAST(#{userCd}AS UNSIGNED)
		AND     EMAIL= #{email}
	</update>
	
	<update id ="updateAccountInfoPw"
			parameterType = "com.red.xip.shop.model.P_Account">
		UPDATE  XIP_USERS
		   SET  PW = #{newPw}
		WHERE   USER_CD = CAST(#{userCd}AS UNSIGNED)
		AND     EMAIL= #{email}
	</update>
	
	<select id="getPwCheck" 
		parameterType = "com.red.xip.shop.model.P_Account"
		resultType="com.red.xip.shop.model.R_Account">
	
		SELECT PW, EMAIL, USER_CD
		FROM   XIP_USERS
		WHERE  EMAIL = #{email}
		
	</select>
	
	<insert id="insertAdd" 
		parameterType = "com.red.xip.shop.model.P_Account">
	 
		INSERT INTO ADDRESSES(
	        USER_CD,
	        ADD_LAST_NM,
	        ADD_FIRST_NM,
	        PHONE,
	        COMPANY,
	        ADD_1,
	        ADD_2,
	        CITY,
	        ADD_COUNTRY,
	        STATE,
	        POSTAL_CD,
	        CREAT_DT,
	        MODIFY_DT
	    )
	    VALUES (
	        CAST(#{userCd}AS UNSIGNED),
	        #{addLastNm},
	        #{addFirstNm},
	        #{phone},
	        #{company},
	        #{add1},
	        #{add2},
	        #{city},
	        #{addCountry},
	        #{state},
	        #{postalCd},
	        NOW(),
	        NOW()
	    )
	    ON DUPLICATE KEY UPDATE
	    ADD_LAST_NM = #{addLastNm},
        ADD_FIRST_NM = #{addFirstNm},
        PHONE = #{phone},
        COMPANY = #{company},
        ADD_1 = #{add1},
        ADD_2 = #{add2},
        CITY = #{city},
        ADD_COUNTRY = #{addCountry},
        STATE = #{state},
        POSTAL_CD = #{postalCd},
        MODIFY_DT = NOW();
	</insert>

	<select id="selectProdList" 
		parameterType = "com.red.xip.shop.model.P_Shop"
		resultType="com.red.xip.shop.model.R_Shop">
	
		SELECT  PROD_CD,
		        NAME,
		        US_PRICE,
		        PRICE,
		        STATUS,
		        IMAGE_SRC
		FROM    XIP_PROD
		WHERE   STATUS != '-1'
		AND     CASE WHEN IFNULL(#{season},'ALL') = 'ALL' THEN TRUE 
				ELSE SEASON = #{season} END;
	</select>
	
	<select id="selectDetailProdList" 
		parameterType = "com.red.xip.shop.model.P_Shop"
		resultType="com.red.xip.shop.model.R_Shop">
		<![CDATA[
			SELECT  M.NAME,
			        M.PRICE,
			        M.US_PRICE,
			        M.SIZE_OPT,
			        M.PROD_DESC,
			        M.PROD_DESC_D,
			        D.PROD_CD_D,
			        D.PROD_SIZE,
			        CASE WHEN D.SOLD_QTY < D.TOTAL_QTY THEN 1 
			             ELSE 2 END AS PROD_STATUS
			FROM    XIP_PROD AS M
			        INNER JOIN XIP_PROD_D AS D
			        ON D.PROD_CD = M.PROD_CD
			WHERE   M.PROD_CD = #{prodCd}
			AND     STATUS != '-1'
		]]>
	</select>
	
	<insert id="insertCart" 
		parameterType = "com.red.xip.shop.model.P_Account">
	 
		INSERT INTO XIP_CART (
		    USER_CD,
		    PROD_CD_D,
		    PROD_QTY,
		    CREAT_DT,
		    MODIFY_DT
		)
		VALUES (
		    CAST(#{userCd}AS UNSIGNED),
		    #{prodCdD},
		    1,
		    NOW(),
		    NOW()
		)
	    ON DUPLICATE KEY UPDATE
	 	PROD_QTY = PROD_QTY + 1,
	 	MODIFY_DT = NOW()
	</insert>
	
	<select id="selectCart" 
		parameterType = "com.red.xip.shop.model.P_Cart"
		resultType="com.red.xip.shop.model.R_Cart">
		<![CDATA[
			SELECT  M.NAME,
			        M.PRICE,
			        M.US_PRICE,
			        M.IMAGE_SRC,
			        D.PROD_SIZE,
			        C.PROD_QTY,
			        D.PROD_CD_D    
			FROM    XIP_CART AS C
			        INNER JOIN XIP_PROD_D AS D
			        ON  D.PROD_CD_D = C.PROD_CD_D
			        AND D.SOLD_QTY < D.TOTAL_QTY
			        INNER JOIN XIP_PROD AS M
			        ON  M.PROD_CD = D.PROD_CD
			        AND M.STATUS != '-1'
			WHERE   C.USER_CD = CAST(#{userCd}AS UNSIGNED)
			AND     C.PROD_QTY > 0
		]]>
	</select>
	
	<update id ="updateCartQty"
			parameterType = "com.red.xip.shop.model.P_Cart">
		UPDATE  XIP_CART
		   SET  PROD_QTY = CASE WHEN #{qtyChangeType} = 'UP' THEN PROD_QTY + 1
		   						WHEN #{qtyChangeType} = 'DOWN' THEN PROD_QTY -1
		   						ELSE PROD_QTY END
		WHERE   USER_CD = CAST(#{userCd}AS UNSIGNED)
		AND     PROD_CD_D= #{prodCdD}
	</update>
	
	<delete id ="deleteCartQty"
			parameterType = "com.red.xip.shop.model.P_Cart">
		DELETE FROM XIP_CART WHERE USER_CD = CAST(#{userCd}AS UNSIGNED) AND PROD_CD_D= #{prodCdD};
	</delete>
	
	<select id="selectCartQty" 
		parameterType = "com.red.xip.shop.model.P_Cart"
		resultType="int">
		SELECT TOTAL_QTY - SOLD_QTY FROM XIP_PROD_D WHERE PROD_CD_D= #{prodCdD};
	</select>
	
	<delete id ="deleteWebauthn"
			parameterType = "com.red.xip.shop.model.P_Account">
		DELETE FROM WEB_AUTHN WHERE USER_CD = CAST(#{userCd}AS UNSIGNED);
	</delete>
	
	<delete id ="deleteAccount"
			parameterType = "com.red.xip.shop.model.P_Account">
		DELETE FROM XIP_USERS WHERE USER_CD = CAST(#{userCd}AS UNSIGNED);
	</delete>
	
	<select id="selectOrder" 
		parameterType = "com.red.xip.shop.model.P_Order"
		resultType="com.red.xip.shop.model.R_Order">
		
		SELECT  CONCAT (DATE_FORMAT(ORDER_DT, '%b' ), ' ', 
						DATE_FORMAT(ORDER_DT, '%e' ), ', ', 
						DATE_FORMAT(ORDER_DT, '%Y') ) AS ORDER_DT,
		        CASE ORDER_STATUS 
		             WHEN '1' THEN 'PURCHASED'
		             WHEN '2' THEN 'SHIPPED'
		             WHEN '3' THEN 'SHIPPED'
		             WHEN '0' THEN 'CANCELLING'
		             WHEN '-1' THEN 'CANCELLED'
		             ELSE '' END AS ORDER_STATUS,
		        ORDER_CD,
		        CASE CURRENCY
		             WHEN 'KRW' THEN CONCAT( 'â‚©', FORMAT(TOTAL_AMOUNT,0) )
		             WHEN 'USD' THEN CONCAT( '$', FORMAT(TOTAL_AMOUNT,0) )    
		             ELSE '' END AS TOTAL_AMOUNT
		FROM    XIP_ORDER AS M
		WHERE   USER_CD = #{userCd}
	</select>
	
</mapper>